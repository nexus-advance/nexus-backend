// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model nex_usr_usuario {
  usr_code           String   @id() @default(uuid())
  usr_code_employe   String
  usr_names          String
  usr_surnames       String
  usr_password       String
  usr_attempts_faile Int      @default(0) @db.SmallInt
  usr_status         Estado   @default(ACTIVE)
  usr_date_create    DateTime @default(now())
  usr_date_update    DateTime @default(now()) @db.Timestamptz()
  usr_user_create    String
  usr_user_update    String
}

model nex_gen_gender {
  gen_code        String            @id() @default(uuid())
  gen_names       String
  gen_status      Estado            @default(ACTIVE)
  nex_cli_clients nex_cli_clients[]
}

model nex_cis_civil_status {
  cis_code        String            @id() @default(uuid())
  cis_names       String
  cis_status      Estado            @default(ACTIVE)
  nex_cli_clients nex_cli_clients[]
}

model nex_prf_profession {
  prf_code   String @id() @default(uuid())
  prf_names  String
  prf_status Estado @default(ACTIVE)
}

model nex_edl_education_level {
  edl_code   String @id() @default(uuid())
  edl_names  String
  edl_status Estado @default(ACTIVE)
}

model nex_dep_departament {
  dep_code               String                   @id() @default(uuid())
  dep_names              String
  dep_status             Estado                   @default(ACTIVE)
  nex_mun_municipalities nex_mun_municipalities[]
}

model nex_mun_municipalities {
  mun_code            String               @id() @default(uuid())
  mun_names           String
  mun_status          Estado               @default(ACTIVE)
  dep_code            String
  nex_dep_departament nex_dep_departament? @relation(fields: [dep_code], references: [dep_code], onDelete: NoAction, onUpdate: NoAction)
  nex_dis_districts   nex_dis_districts[]
}

model nex_mar_markeds {
  mar_code        String            @id() @default(uuid())
  mar_name        String
  mar_status      Estado            @default(ACTIVE)
  nex_cli_clients nex_cli_clients[]
}

model nex_dis_districts {
  dis_code                    String                  @id() @default(uuid())
  dis_names                   String
  dis_status                  Estado                  @default(ACTIVE)
  mun_code                    String
  nex_mun_municipalities      nex_mun_municipalities? @relation(fields: [mun_code], references: [mun_code], onDelete: NoAction, onUpdate: NoAction)
  nex_dis_districts_bussinees nex_cli_clients[]       @relation("bussiness")
  nex_dis_districts_client    nex_cli_clients[]       @relation("cliente")
}

model nex_cli_clients {
  cli_code                    String                @id() @default(uuid())
  cli_full_name               String?
  cli_birth_date              DateTime?             @db.Date()
  mar_code                    String?
  nex_mar_markeds             nex_mar_markeds?      @relation(fields: [mar_code], references: [mar_code], onDelete: NoAction, onUpdate: NoAction)
  cis_code                    String?
  nex_cis_civil_status        nex_cis_civil_status? @relation(fields: [cis_code], references: [cis_code], onDelete: NoAction, onUpdate: NoAction)
  cli_dui                     String?
  cli_place_expedition        String?
  cli_dui_date_expedition     DateTime?             @db.Date()
  cli_dui_date_expiration     DateTime?             @db.Date()
  gen_code                    String?
  nex_gen_gender              nex_gen_gender?       @relation(fields: [gen_code], references: [gen_code], onDelete: NoAction, onUpdate: NoAction)
  cli_is_taxpayer             Boolean?
  cli_no_taxpayer             String?
  cli_mount_month             Float?
  cli_have_other_incomer      Boolean?
  cli_bussiness_tipe          String?
  cli_time_bussiness          Int?
  cli_address_bussiness       String?
  cli_dep_code_bussines       String?
  cli_mun_code_bussines       String?
  cli_dis_code_bussines       String?
  nex_dis_districts_bussinees nex_dis_districts?    @relation("bussiness", fields: [cli_dis_code_bussines], references: [dis_code], onDelete: NoAction, onUpdate: NoAction)
  cli_daily_sell              Float?
  cli_daily_buy               Float?
  cli_daily_gain              Float?
  cli_address                 String?
  cli_phone                   String?
  cli_cell_phone              String?
  cli_dep_code                String?
  cli_mun_code                String?
  cli_dis_code                String?
  nex_dis_districts_client    nex_dis_districts?    @relation("cliente", fields: [cli_dis_code], references: [dis_code], onDelete: NoAction, onUpdate: NoAction)
  cli_time_alive              Int?
  cli_tenant_name             String?
  cli_tenant_phone            String?
  cli_status                  Estado?               @default(ACTIVE)
  cli_date_create             DateTime?             @default(now())
  cli_date_update             DateTime?             @default(now()) @db.Timestamptz()
  nex_ref_references          nex_ref_references[]
}

model nex_rel_relationship {
  rel_code           String               @id() @default(uuid())
  rel_names          String
  rel_status         Estado               @default(ACTIVE)
  nex_ref_references nex_ref_references[]
}

model nex_ref_references {
  ref_code             String                @id() @default(uuid())
  ref_tipe             FefTipe               @default(FAMILY)
  ref_name             String
  rel_code             String
  nex_rel_relationship nex_rel_relationship? @relation(fields: [rel_code], references: [rel_code], onDelete: NoAction, onUpdate: NoAction)
  ref_address          String
  ref_work_place       String
  ref_phone            String
  ref_status           Estado                @default(ACTIVE)
  cli_code             String
  nex_cli_clients      nex_cli_clients?      @relation(fields: [cli_code], references: [cli_code], onDelete: NoAction, onUpdate: NoAction)
}

enum FefTipe {
  FAMILY
  FRIEND
}

enum Estado {
  ACTIVE
  INACTIVE
}
